# Creating Short video from yt stream on linux using ffmpeg

# Step 1: make the video 40s long

# Input and output filenames
input="videoplayback.mp4"
output="video_no_audio_speed.mp4"

# Get original duration in seconds using ffprobe
duration=$(ffprobe -v error -show_entries format=duration \
           -of default=noprint_wrappers=1:nokey=1 "$input")

# Calculate speed factor
speed_factor=$(echo "$duration / 40" | bc -l)

# Apply speed-up using FFmpeg
ffmpeg -i "$input" -filter:v "setpts=PTS/$speed_factor" -an "$output"

#Step 2: Rotate the result 90Â° anticlockwise

ffmpeg -i "video_no_audio_speed.mp4" \
  -vf "transpose=1,scale=1080:1920:force_original_aspect_ratio=decrease,pad=1080:1920:(ow-iw)/2:(oh-ih)/2" \
  -c:a copy "video_no_audio.mp4"

# Rotating the ScreenShort
ffmpeg -i "/home/$USER/Videos/pic.png" -vf "transpose=1" "/home/$USER/Videos/image.png"


# Step 3 Create a 5s image video (Shorts style)
image_path="/home/$USER/Videos/image.png"
ffmpeg -loop 1 -i "$image_path" \
       -vf "scale=1080:1920:force_original_aspect_ratio=decrease,pad=1080:1920:(ow-iw)/2:(oh-ih)/2" \
       -c:v libx264 -t 5 -r 30 -pix_fmt yuv420p image_video.mp4

# Step 4: Merge video + image
echo "file 'video_no_audio.mp4'" > final_file_list.txt
echo "file 'image_video.mp4'" >> final_file_list.txt

ffmpeg -f concat -safe 0 -i final_file_list.txt -c copy combined_video_no_audio.mp4

# Step 5: Add audio
audio_path="/home/$USER/Videos/music26.mp3"
ffmpeg -i combined_video_no_audio.mp4 -i "$audio_path" -shortest \
       -c:v copy -c:a aac -b:a 192k final_video.mp4

echo "ðŸŽ‰ Final MP4 created: final_video.mp4"
